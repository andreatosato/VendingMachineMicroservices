// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using VendingMachine.Service.Machines.Data;

namespace VendingMachine.Service.Machines.Data.Migrations
{
    [DbContext(typeof(MachineContext))]
    [Migration("20200109090951_FirstMigrationMachines")]
    partial class FirstMigrationMachines
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.MachineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CoinsCurrentSupply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CoinsInMachine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("LatestCleaningMachine")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LatestLoadedProducts")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LatestMoneyCollection")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<Point>("Position")
                        .HasColumnType("geography");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("_dataCreated")
                        .HasColumnName("DataCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("_dataUpdated")
                        .HasColumnName("DataUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Model", "Version")
                        .IsUnique()
                        .HasName("IX_UniqueMachineVersion")
                        .HasFilter("[Model] IS NOT NULL");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ActivationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MachineItemId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ActiveProducts");

                    b.HasIndex("MachineItemId");

                    b.ToTable("ActiveProducts");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.ProductConsumed", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ActivationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MachineItemId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ProvidedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("MachineItemId");

                    b.ToTable("HistoryProducts");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.MachineItem", b =>
                {
                    b.HasOne("VendingMachine.Service.Machines.Domain.MachineType", "MachineType")
                        .WithMany()
                        .HasForeignKey("MachineTypeId");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.Product", b =>
                {
                    b.HasOne("VendingMachine.Service.Machines.Domain.MachineItem", null)
                        .WithMany("ActiveProducts")
                        .HasForeignKey("MachineItemId");
                });

            modelBuilder.Entity("VendingMachine.Service.Machines.Domain.ProductConsumed", b =>
                {
                    b.HasOne("VendingMachine.Service.Machines.Domain.MachineItem", null)
                        .WithMany("HistoryProducts")
                        .HasForeignKey("MachineItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
